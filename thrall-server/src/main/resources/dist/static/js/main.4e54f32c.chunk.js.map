{"version":3,"sources":["components/system-nav/index.js","fly.js","components/search-form/service.js","components/search-form/api.js","components/search-form/index.js","components/exception-table/index.js","components/history-exception/service.js","components/history-exception/api.js","components/real-time-monitoring/index.js","components/history-exception/index.js","router.js","App.js","serviceWorker.js","index.js"],"names":["Sider","withRouter","props","style","overflow","height","position","left","className","theme","mode","defaultSelectedKeys","location","pathname","onSelect","keyObj","key","history","push","Item","type","fly","interceptors","request","use","response","data","err","config","timeout","baseURL","useInit","useState","services","setServices","useEffect","a","async","get","context","code","init","then","res","FormItem","Option","RangePicker","forwardRef","ref","searchRef","useRef","fromJS","startTime","endTime","thrallType","microService","id","param","setParam","params","useCallback","toJS","useImperativeHandle","paddingBottom","textAlign","layout","label","defaultValue","val","page","setIn","width","value","map","service","microServiceName","onChange","dates","date","moment","format","set","first","last","onClick","onSearch","rowKey","record","columns","dataSource","pagination","expandedRowRender","thrallExceptionMsg","pageNow","pageSize","thrall","pageParam","setPageParam","setPage","resVisiable","setResVisiable","drawerVisible","setDrawerVisible","setThrallRecordProperties","flag","thrallRecord","setThrallRecord","post","size","total","totalElements","current","number","currentPage","title","dataIndex","ellipsis","render","text","reqHead","JSON","stringify","url","hostMessage","host","port","reqUrl","reqType","reqParam","pageInfo","json","parse","e","message","error","term","Terminal","cols","rows","cursorBlink","cursorStyle","scrollback","tabStopWidth","screenKeys","connectionId","uuid","window","fitAddon","FitAddon","source","EventSource","terminalContainer","document","getElementById","loadAddon","open","write","fit","getAttribute","onmessage","event","printToPage","createTime","isOnlyOne","close","onopen","console","log","setTimeout","notification","description","duration","onerror","data-1","data-2","data-3","marginTop","TextArea","onClose","setFormatJson","executeException","placement","closable","visible","target","executeRes","routes","path","exact","component","HistoryException","RealTimeMonitoring","Content","App","marginLeft","padding","background","routers","router","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e54f32c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nconst { Sider } = Layout;\r\n\r\n\r\nconst nav = (props) => {\r\n  const getPathname = () => {\r\n    if (props.location.pathname === \"/real-time-monitoring\") {\r\n      return [\"2\"];\r\n    }\r\n    return [\"1\"];\r\n  }\r\n  return (\r\n    <Sider\r\n      style={{\r\n        overflow: 'auto',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        left: 0,\r\n      }}\r\n    >\r\n      <div className=\"logo\">THRALL</div>\r\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={getPathname()}\r\n          onSelect={(keyObj)=> {\r\n            if (keyObj.key === '1') {\r\n              props.history.push(\"/history-exception\")\r\n            }\r\n            if (keyObj.key === '2') {\r\n              props.history.push(\"/real-time-monitoring\")\r\n            }\r\n          }}\r\n        >\r\n        <Menu.Item key=\"1\">\r\n          <Icon type=\"video-camera\" />\r\n          <span className=\"nav-text\">历史异常</span>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <Icon type=\"cloud-o\" />\r\n          <span className=\"nav-text\">实时监控</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nexport default withRouter(nav);","import fly from 'flyio'\r\n\r\n//添加请求拦截器\r\nfly.interceptors.request.use((request) => {\r\n  //给所有请求添加自定义header\r\n  // request.headers[\"X-Tag\"]=\"flyio\";\r\n  //打印出请求体\r\n  // console.log(request.body)\r\n  //终止请求\r\n  //var err=new Error(\"xxx\")\r\n  //err.request=request\r\n  //return Promise.reject(new Error(\"\"))\r\n\r\n  //可以显式返回request, 也可以不返回，没有返回值时拦截器中默认返回request\r\n  return request;\r\n})\r\nfly.interceptors.response.use(\r\n  (response) => {\r\n    //只将请求结果的data字段返回\r\n    return response.data\r\n  },\r\n  (err) => {\r\n    //发生网络错误后会走到这里\r\n    //return Promise.resolve(\"ssss\")\r\n  }\r\n)\r\n\r\nfly.config.timeout=30000\r\nfly.config.baseURL=\"/thrall\"\r\n\r\nexport default fly","import {\r\n  findMicroService\r\n} from './api'\r\nimport  {\r\n  useEffect,\r\n  useState\r\n} from \"react\";\r\n\r\nconst init = async () => {\r\n  const {\r\n    context,\r\n    code\r\n  } = await findMicroService();\r\n  if (code === 200) {\r\n    return context\r\n  }\r\n  return []\r\n}\r\n\r\nconst useInit = () => {\r\n  const [services, setServices] = useState([])\r\n  useEffect(() => {\r\n    init().then(res => setServices(res))\r\n  }, []);\r\n  return [services];\r\n};\r\n\r\nexport {\r\n  useInit\r\n}","import fly from '../../fly'\r\n\r\nconst findMicroService = () => {\r\n  return fly.get(\"/micro-service\")\r\n}\r\n\r\n\r\n\r\nexport {\r\n  findMicroService\r\n}","import React, {\r\n  useState,\r\n  forwardRef,\r\n  useRef,\r\n  useImperativeHandle,\r\n  useCallback \r\n} from \"react\";\r\nimport { Form,  Select, DatePicker, Button  } from 'antd';\r\nimport { useInit } from './service'\r\nimport { fromJS } from 'immutable'\r\nimport moment from 'moment'\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\nexport default forwardRef((props,ref) => {\r\n  const searchRef = useRef()\r\n  const [services] = useInit()\r\n  const [param, setParam] = useState(fromJS({\r\n    startTime: '',\r\n    endTime: '',\r\n    thrallType: '',\r\n    microService: {\r\n      id: ''\r\n    }\r\n  }))\r\n  const params =  useCallback(() => param.toJS(),[param])\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      params\r\n    }\r\n  });\r\n  return (\r\n    <div ref={searchRef} style={{paddingBottom: 20,textAlign: 'left'}}>\r\n      <Form layout=\"inline\">\r\n        <FormItem label=\"服务名称\">\r\n          <Select defaultValue=\"\"  onSelect={(val) => setParam(page => page.setIn(['microService','id'],val)) } style={{ width: 120 }}>\r\n              <Option value=\"\">全部</Option>\r\n              {services && services.map(service => <Option key={service.id} value={service.id}>{service.microServiceName}</Option>)}\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"时间范围\">\r\n          <RangePicker onChange={(dates) => {\r\n            dates = fromJS(dates).map(date => moment(date).format(\"YYYY-MM-DD\"))\r\n            setParam(param => param.set('startTime',dates.first()).set('endTime',dates.last()))\r\n          }} />\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button type=\"primary\" onClick={() => props.onSearch()}>查询</Button>\r\n        </FormItem>\r\n      </Form>\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n","import React from \"react\";\r\nimport { Table } from 'antd';\r\n\r\n\r\nexport default ((props) => {\r\n  return (\r\n    <Table \r\n      rowKey={record => record.id}\r\n      columns={props.columns} \r\n      dataSource={props.dataSource}\r\n      pagination={props.pagination}\r\n      expandedRowRender={record => <div>{record.thrallExceptionMsg}</div>}\r\n    />\r\n  )\r\n})","import {\r\n  findThrallPage,\r\n  execute\r\n} from './api'\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  useRef\r\n} from \"react\";\r\nimport {\r\n  fromJS\r\n} from 'immutable'\r\nimport { Button,message } from 'antd';\r\nconst init = async (param) => {\r\n  const {\r\n    context,\r\n    code\r\n  } = await findThrallPage(param);\r\n  if (code === 200) {\r\n    context.pagination = {\r\n      pageSize: context.size,\r\n      total: context.totalElements,\r\n      current: context.number + 1,\r\n    }\r\n    return context\r\n  }\r\n  return null\r\n}\r\n\r\nconst useInit = () => {\r\n  const [pageParam,setPageParam] = useState(fromJS({\r\n    pageNow: 0,\r\n    pageSize: 10,\r\n    thrall: null\r\n  }))\r\n  const searchRef = useRef(null)\r\n  const [page, setPage] = useState(fromJS({}))\r\n  const [resVisiable, setResVisiable] = useState(false)\r\n\r\n  const onSearch = () => {\r\n    const param = searchRef.current.params()\r\n    setPageParam(pageParam => pageParam.set(\"thrall\",param))\r\n  }\r\n\r\n  const [drawerVisible,setDrawerVisible] = useState(false)\r\n  const onClose = () => {\r\n    setDrawerVisible(false)\r\n    setResVisiable(false);\r\n  }\r\n\r\n  const setThrallRecordProperties = ({key,value}) => {\r\n    const flag = fromJS(thrallRecord).set(key,value);\r\n    setThrallRecord(flag.toJS());\r\n  }\r\n\r\n  const setFormatJson = (json) => {\r\n    let format = null;\r\n    if (!json) {\r\n      return json;\r\n    }\r\n    try {\r\n      format = JSON.stringify(JSON.parse(json),null,6)\r\n    } catch (e) {\r\n      message.error('json格式错误！请检查！')\r\n      format = json;\r\n    }\r\n    return format;\r\n  }\r\n\r\n  const executeException = async() => {\r\n    setResVisiable(false);\r\n    const res = await execute(thrallRecord);\r\n    setResVisiable(true);\r\n    setThrallRecordProperties({key: 'executeRes',value: JSON.stringify(res.context)})\r\n  }\r\n  const [thrallRecord, setThrallRecord] = useState(null)\r\n  useEffect(() => {\r\n    init(pageParam).then(res => {\r\n      const {\r\n        size,\r\n        totalElements,\r\n        number\r\n      } = res;\r\n      const pagination = {\r\n        pageSize: size,\r\n        total: totalElements,\r\n        current: number + 1,\r\n        onChange: (currentPage, pageSize) => {\r\n          setPageParam(pageParam => pageParam.set(\"pageNow\", currentPage - 1).set(\"pageSize\",pageSize))\r\n        }\r\n      }\r\n      const columns =  [{\r\n        title: '服务名称',\r\n        dataIndex: 'microService.microServiceName',\r\n        key: 'microServiceName',\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: '服务类型',\r\n        dataIndex: 'microService.microServiceType',\r\n        key: 'microServiceType',\r\n        width: 90,\r\n        render: (text) => <span> {text === 1 ? \"注册\" : \"直连\" } </span>,\r\n      },\r\n      {\r\n        title: 'IP',\r\n        dataIndex: 'hostMessage.host',\r\n        key: 'host',\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: '端口',\r\n        dataIndex: 'hostMessage.port',\r\n        key: 'port',\r\n        width: 70,\r\n      },\r\n      {\r\n        title: '异常类',\r\n        dataIndex: 'exceptionClassName',\r\n        key: 'exceptionClassName',\r\n        width: 250,\r\n      },\r\n      {\r\n        title: '异常方法',\r\n        dataIndex: 'exceptionMethodName',\r\n        key: 'exceptionMethodName',\r\n        width: 200,\r\n      },\r\n      {\r\n        title: '方式',\r\n        dataIndex: 'reqType',\r\n        key: 'reqType',\r\n        ellipsis: true,\r\n      },\r\n      {\r\n        title: '路径',\r\n        dataIndex: 'reqUrl',\r\n        key: 'reqUrl',\r\n        ellipsis: true,\r\n      },\r\n      {\r\n        title: '参数',\r\n        dataIndex: 'reqParam',\r\n        key: 'reqParam',\r\n        ellipsis: true\r\n      },\r\n      {\r\n        title: '时间',\r\n        dataIndex: 'createTime',\r\n        key: 'createTime',\r\n        ellipsis: true,\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'action',\r\n        render: (record) => (\r\n          <Button \r\n            type=\"link\"\r\n            onClick={() => {\r\n              setDrawerVisible(true)\r\n              setThrallRecord({\r\n                reqHead: JSON.stringify(record.reqHead),\r\n                url: `http://${record.hostMessage.host}:${record.hostMessage.port}${record.reqUrl}`,\r\n                reqType: record.reqType,\r\n                reqParam: record.reqParam,\r\n                microServiceName: record.microService.microServiceName\r\n              })\r\n            }}>\r\n            调试\r\n          </Button>\r\n        ),\r\n      }\r\n    ]\r\n      const pageInfo = fromJS(res).set('columns', columns).set(\"pagination\",pagination)\r\n      setPage(pageInfo)\r\n    })\r\n  }, [pageParam]);\r\n\r\n  return [page,searchRef,onSearch,drawerVisible,onClose,thrallRecord,setThrallRecordProperties,setFormatJson,executeException,resVisiable];\r\n};\r\n\r\n\r\nexport {\r\n  useInit\r\n}","import fly from '../../fly'\r\n\r\nconst findThrallPage = (params) => {\r\n  return fly.post(\"/page\", params)\r\n}\r\nconst execute = (params) => {\r\n  return fly.post(\"/execute\", params)\r\n}\r\nexport {\r\n  findThrallPage,\r\n  execute\r\n}","import React, {\r\n  useEffect\r\n} from \"react\";\r\nimport {\r\n  Terminal\r\n} from 'xterm';\r\nimport '../../../node_modules/xterm/css/xterm.css'\r\nimport {\r\n  FitAddon\r\n} from 'xterm-addon-fit';\r\nimport moment from 'moment'\r\nimport {\r\n  uuid\r\n} from 'uuidv4'\r\nimport { notification } from 'antd';\r\nexport default (props) => {\r\n  \r\n  useEffect(() => {\r\n    const term = new Terminal({\r\n      cols: 92,\r\n      rows: 32,\r\n      cursorBlink: true, // 光标闪烁\r\n      cursorStyle: \"underline\", // 光标样式  null | 'block' | 'underline' | 'bar'\r\n      scrollback: 9999999, //回滚\r\n      tabStopWidth: 8, //制表宽度\r\n      screenKeys: true //\r\n    })\r\n    const connectionId = uuid();\r\n    window.connectionId = connectionId;\r\n    const fitAddon = new FitAddon();\r\n    const source = new EventSource(`/thrall/sse/${connectionId}`);\r\n    const terminalContainer = document.getElementById('terminal-container')\r\n    term.loadAddon(fitAddon)\r\n    term.open(terminalContainer)\r\n    term.write('welcome to thrall !!!\\r\\n')\r\n    fitAddon.fit()\r\n\r\n    const microServiceName = terminalContainer.getAttribute(\"data-1\")\r\n    const reqUrl =  terminalContainer.getAttribute(\"data-2\")\r\n    const reqParam =  terminalContainer.getAttribute(\"data-3\")\r\n    const isOnlyOne = (data) => {\r\n      const url = `http://${data.hostMessage.host}:${data.hostMessage.port}${data.reqUrl}`;\r\n      return microServiceName === data.microService.microServiceName && reqUrl === url && reqParam === data.reqParam;\r\n    }\r\n    \r\n    source.onmessage = (event) => {\r\n      const printToPage = (data) => {\r\n        term.write(`----------服务名:${data.microService.microServiceName}----------\\r\\n`)\r\n        term.write(`----------主机端口：${data.hostMessage.host}:${data.hostMessage.port}----------\\r\\n`)\r\n        term.write(`----------时间：${moment(data.createTime).format(\"YYYY-MM-DD HH:mm:ss.SSS\")}----------\\r\\n`)\r\n        term.write(`----------请求路径：${data.reqUrl}----------\\r\\n`)\r\n        term.write(`----------请求方式：${data.reqType}----------\\r\\n`)\r\n        term.write(`----------请求参数：${data.reqParam}----------\\r\\n`)\r\n        term.write(data.thrallExceptionMsg)\r\n      }\r\n      const data = JSON.parse(event.data);\r\n      if (microServiceName) {\r\n        if (data && data.thrallExceptionMsg && isOnlyOne(data)) {\r\n          printToPage(data)\r\n          source.close()\r\n        }\r\n      } else {\r\n        if (data && data.thrallExceptionMsg) {\r\n          printToPage(data)\r\n        }\r\n      }\r\n    }\r\n    source.onopen = () => {\r\n      console.log(\"连接已经打开\")\r\n      setTimeout(() => {\r\n        const args = {\r\n          message: '会话结束',\r\n          description:\r\n            '连接时间过长，已为您断开连接！',\r\n          duration: 0,\r\n        };\r\n        notification.open(args);\r\n        source.close()\r\n      }, 60*60*1000)\r\n    }\r\n    source.onerror = () => {\r\n      console.log(\"连接出错\")\r\n    }\r\n    return () => {\r\n      const connectionId = window.connectionId;\r\n      if (connectionId) {\r\n        source.close()\r\n      }\r\n    }\r\n  }, [])\r\n  return ( \r\n    <div id = \"terminal-container\"\r\n      data-1 = {props.microServiceName}\r\n      data-2 = {props.reqUrl}\r\n      data-3 = {props.reqParam}\r\n      style = {{\r\n        width: '100%',\r\n        height: 650,\r\n        marginTop: 50\r\n      }}\r\n    />\r\n  )\r\n}","import React, { Fragment } from \"react\";\r\nimport SearchForm from '../search-form'\r\nimport ExceptionTable from '../exception-table'\r\nimport {useInit} from './service'\r\nimport { Drawer,Form,Input,Button,message } from 'antd';\r\nimport RealTimeMonitoring from '../../components/real-time-monitoring' \r\nconst Item = Form.Item\r\nconst { TextArea } = Input;\r\nexport default () => {\r\n  const [page,searchRef,onSearch,drawerVisible,onClose,thrallRecord,setThrallRecordProperties,setFormatJson,executeException,resVisiable] = useInit()\r\n  return (\r\n    <Fragment>\r\n      <SearchForm ref={searchRef} onSearch={onSearch}/>\r\n      <ExceptionTable \r\n        columns={page.get(\"columns\")}\r\n        dataSource={page.get(\"content\")? page.get(\"content\").toJS():[]} \r\n        pagination={page.get(\"pagination\")}\r\n      />\r\n      {thrallRecord && <Drawer\r\n          width={640}\r\n          title=\"Thrall异常调测\"\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={onClose}\r\n          visible={drawerVisible}\r\n        > \r\n          <Form layout='vertical'>\r\n            <Item label=\"URL:\">\r\n              <Input value={thrallRecord.url}\r\n                onChange={(e) => setThrallRecordProperties({key: 'url', value: e.target.value})}/>\r\n            </Item>\r\n            <Item label=\"Http Method\">\r\n              <Input value={thrallRecord.reqType} onChange={(e) => setThrallRecordProperties({key: 'reqType', value: e.target.value})}/>\r\n            </Item>\r\n            <Item label=\"Headers\">\r\n              <TextArea rows={6} \r\n                value={setFormatJson(thrallRecord.reqHead)}\r\n                onChange={(e) => setThrallRecordProperties({key: 'reqHead', value: e.target.value})} />\r\n            </Item>\r\n            <Item label=\"Query\">\r\n              <TextArea rows={6} \r\n                value={setFormatJson(thrallRecord.reqParam)}\r\n                onChange={(e) => setThrallRecordProperties({key: 'reqParam', value: e.target.value})} />\r\n            </Item>\r\n            {\r\n              resVisiable &&  \r\n              <Item label=\"Result\">\r\n                <TextArea rows={6} \r\n                  value={setFormatJson(thrallRecord.executeRes)}\r\n                />\r\n              </Item>\r\n            }\r\n            {\r\n              resVisiable && \r\n              <Item label=\"ExceptionLog\">\r\n                <RealTimeMonitoring \r\n                  microServiceName={thrallRecord.microServiceName} \r\n                  reqUrl={thrallRecord.url}\r\n                  reqParam={thrallRecord.reqParam}\r\n                />\r\n              </Item>\r\n            }\r\n            <Button type=\"primary\" size='large' \r\n              onClick={() => {\r\n                try {\r\n                  JSON.parse(thrallRecord.reqParam);\r\n                  JSON.parse(thrallRecord.reqHead);\r\n                } catch(e) {\r\n                  message.error('json格式错误！请检查！')\r\n                  return;\r\n                }\r\n                executeException()\r\n              }}>\r\n              执行\r\n            </Button>\r\n          </Form>\r\n        </Drawer>}\r\n        \r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\n","import HistoryException from './components/history-exception'\r\nimport RealTimeMonitoring from './components/real-time-monitoring'\r\n\r\nconst routes = [{\r\n    path: '/',\r\n    exact: true,\r\n    component: HistoryException\r\n  },\r\n  {\r\n    path: '/history-exception',\r\n    exact: false,\r\n    component: HistoryException\r\n  },\r\n  {\r\n    path: '/real-time-monitoring',\r\n    exact: false,\r\n    component: RealTimeMonitoring\r\n  }\r\n]\r\nexport default routes","import React from 'react';\nimport Nav from './components/system-nav'\nimport './App.css';\nimport { Layout } from 'antd';\nimport {  Route,Switch  } from 'react-router-dom'\nimport routers from \"./router\"\nconst { Content } = Layout;\nconst App = () => {\n  return (\n    <Layout>\n    <Nav />\n    <Layout style={{ marginLeft: 200 }}>\n      {/* <Header style={{ background: '#fff', padding: 0 }} /> */}\n      <Content style={{ overflow: 'initial' }}>\n        <div style={{ padding: 24, background: '#fff', textAlign: 'center' }}>\n              <Switch>\n                  {routers.map(router => <Route  key={router.path}  exact={router.exact} path= {router.path} component={router.component}/>)}\n              </Switch>\n        </div>\n      </Content>\n      {/* <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer> */}\n    </Layout>\n  </Layout>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter  } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter>\n  <App />\n</HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}